{
	"name": "PAM_DF_D_BENEFICIO",
	"properties": {
		"description": "Dataflow encargado de cargar la DIM_BENEFICIO",
		"folder": {
			"name": "(PAM) Prospección, Admisión y Matrícula"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_BENEFICIO_PQT",
						"type": "DatasetReference"
					},
					"name": "StgbeneficioParquet",
					"description": "Datos almacenados en Parquet a partir de la Query realizada en Informix On-Premise"
				},
				{
					"dataset": {
						"referenceName": "DIM_BENEFICIO",
						"type": "DatasetReference"
					},
					"name": "QYDimBeneficio",
					"description": "Obtención de SOLO los datos necesarios para determinar cambios en la DIM_BENEFICIO"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DIM_BENEFICIO",
						"type": "DatasetReference"
					},
					"name": "DestinoDimBeneficio"
				}
			],
			"transformations": [
				{
					"name": "CodigoHashPorFila",
					"description": "Generación de código Hash a partir de las columnas"
				},
				{
					"name": "DoesnExists",
					"description": "Detección de registros nuevos o con HASH distintos"
				},
				{
					"name": "LookupCodBeneficio",
					"description": "Lookup on 'DoesntExist' from 'QYDimViaAdmision'"
				},
				{
					"name": "SetDates"
				},
				{
					"name": "Upsert",
					"description": "Activar Upsert para DIM_BENEFICIO"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pipeline_run_id as string",
				"}",
				"source(output(",
				"          codigo_beneficio as string,",
				"          descripcion_beneficio as string,",
				"          codigo_tipo_beneficio as string,",
				"          tipo_beneficio as string,",
				"          codigo_grupo_beneficio as string,",
				"          grupo_beneficio as string,",
				"          codigo_origen_beneficio as string,",
				"          origen_beneficio as string,",
				"          codigo_motivo_asignacion_beneficio as string,",
				"          motivo_asignacion_beneficio as string,",
				"          codigo_acceso_asignar_beneficio as string,",
				"          acceso_asignar_beneficio as string,",
				"          codigo_vigencia_beneficio as string,",
				"          vigencia_beneficio as string,",
				"          fecha_creacion_beneficio as timestamp,",
				"          codigo_aplicacion_beneficio as string,",
				"          aplicacion_beneficio as string,",
				"          codigo_tipo_programa_asociado_beneficio as string,",
				"          tipo_programa_asociado_beneficio as string,",
				"          fecha_referencia_aplicar_beneficio as timestamp,",
				"          codigo_cobertura_beneficio as string,",
				"          cobertura_beneficio as string,",
				"          codigo_nivel_aplicacion as string,",
				"          nivel_aplicacion as string,",
				"          codigo_tipo_grado_beneficio as string,",
				"          tipo_grado_beneficio as string,",
				"          origen as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     partitionBy('hash', 1)) ~> StgbeneficioParquet",
				"source(output(",
				"          CODIGO_BENEFICIO as string,",
				"          CODIGO_HASH as string,",
				"          FECHA_CREACION as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT \\n      [CODIGO_BENEFICIO],\\n      [CODIGO_HASH],\\n      [FECHA_CREACION]\\nFROM [dbo].[DIM_BENEFICIO]',",
				"     format: 'query') ~> QYDimBeneficio",
				"StgbeneficioParquet derive(CODIGO_HASH = md5(",
				"    codigo_beneficio,",
				"    descripcion_beneficio,",
				"    codigo_tipo_beneficio,",
				"    tipo_beneficio,",
				"    codigo_grupo_beneficio,",
				"    grupo_beneficio,",
				"    codigo_origen_beneficio,",
				"    origen_beneficio,",
				"    codigo_motivo_asignacion_beneficio,",
				"    motivo_asignacion_beneficio,",
				"    codigo_acceso_asignar_beneficio,",
				"    acceso_asignar_beneficio,",
				"    codigo_vigencia_beneficio,",
				"    vigencia_beneficio,",
				"    fecha_creacion_beneficio,",
				"    codigo_aplicacion_beneficio,",
				"    aplicacion_beneficio,",
				"    codigo_tipo_programa_asociado_beneficio,",
				"    tipo_programa_asociado_beneficio,",
				"    fecha_referencia_aplicar_beneficio,",
				"    codigo_cobertura_beneficio,",
				"    cobertura_beneficio,",
				"    codigo_nivel_aplicacion,",
				"    nivel_aplicacion,",
				"    codigo_tipo_grado_beneficio,",
				"    tipo_grado_beneficio,",
				"    origen",
				")) ~> CodigoHashPorFila",
				"CodigoHashPorFila, QYDimBeneficio exists(CodigoHashPorFila@CODIGO_HASH == QYDimBeneficio@CODIGO_HASH,",
				"     negate:true,",
				"     broadcast: 'auto')~> DoesnExists",
				"DoesnExists, QYDimBeneficio lookup(StgbeneficioParquet@codigo_beneficio == QYDimBeneficio@CODIGO_BENEFICIO,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupCodBeneficio",
				"LookupCodBeneficio derive(tipo_beneficio = left(tipo_beneficio, 20),",
				"          grupo_beneficio = left(grupo_beneficio, 20),",
				"          cobertura_beneficio = left(cobertura_beneficio, 20),",
				"          nivel_aplicacion = left(nivel_aplicacion, 20),",
				"          tipo_grado_beneficio = left(tipo_grado_beneficio, 18),",
				"          FECHA_CREACION = iif(isNull(FECHA_CREACION), fromUTC(currentUTC(), 'Chile/Continental'), FECHA_CREACION),",
				"          FECHA_ACTUALIZACION = fromUTC(currentUTC(), 'Chile/Continental'),",
				"          ETL_ID = $pipeline_run_id) ~> SetDates",
				"SetDates alterRow(upsertIf(true())) ~> Upsert",
				"Upsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BENEFICIO_SK as integer,",
				"          CODIGO_BENEFICIO as string,",
				"          DESCRIPCION_BENEFICIO as string,",
				"          CODIGO_TIPO_BENEFICIO as string,",
				"          TIPO_BENEFICIO as string,",
				"          CODIGO_GRUPO_BENEFICIO as string,",
				"          GRUPO_BENEFICIO as string,",
				"          CODIGO_ORIGEN_BENEFICIO as string,",
				"          ORIGEN_BENEFICIO as string,",
				"          CODIGO_MOTIVO_ASIGNACION_BENEFICIO as string,",
				"          MOTIVO_ASIGNACION_BENEFICIO as string,",
				"          CODIGO_ACCESO_ASIGNAR_BENEFICIO as string,",
				"          ACCESO_ASIGNAR_BENEFICIO as string,",
				"          CODIGO_VIGENCIA_BENEFICIO as string,",
				"          VIGENCIA_BENEFICIO as string,",
				"          FECHA_CREACION_BENEFICIO as date,",
				"          CODIGO_APLICACION_BENEFICIO as string,",
				"          APLICACION_BENEFICIO as string,",
				"          CODIGO_TIPO_PROGRAMA_ASOCIADO_BENEFICIO as string,",
				"          TIPO_PROGRAMA_ASOCIADO_BENEFICIO as string,",
				"          FECHA_REFERENCIA_APLICAR_BENEFICIO as date,",
				"          CODIGO_COBERTURA_BENEFICIO as string,",
				"          COBERTURA_BENEFICIO as string,",
				"          CODIGO_NIVEL_APLICACION as string,",
				"          NIVEL_APLICACION as string,",
				"          CODIGO_TIPO_GRADO_BENEFICIO as string,",
				"          TIPO_GRADO_BENEFICIO as string,",
				"          CODIGO_HASH as string,",
				"          FECHA_CREACION as timestamp,",
				"          FECHA_ACTUALIZACION as timestamp,",
				"          ORIGEN as string,",
				"          ETL_ID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CODIGO_BENEFICIO'],",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CODIGO_BENEFICIO = StgbeneficioParquet@codigo_beneficio,",
				"          DESCRIPCION_BENEFICIO = descripcion_beneficio,",
				"          CODIGO_TIPO_BENEFICIO = codigo_tipo_beneficio,",
				"          TIPO_BENEFICIO = tipo_beneficio,",
				"          CODIGO_GRUPO_BENEFICIO = codigo_grupo_beneficio,",
				"          GRUPO_BENEFICIO = grupo_beneficio,",
				"          CODIGO_ORIGEN_BENEFICIO = codigo_origen_beneficio,",
				"          ORIGEN_BENEFICIO = origen_beneficio,",
				"          CODIGO_MOTIVO_ASIGNACION_BENEFICIO = codigo_motivo_asignacion_beneficio,",
				"          MOTIVO_ASIGNACION_BENEFICIO = motivo_asignacion_beneficio,",
				"          CODIGO_ACCESO_ASIGNAR_BENEFICIO = codigo_acceso_asignar_beneficio,",
				"          ACCESO_ASIGNAR_BENEFICIO = acceso_asignar_beneficio,",
				"          CODIGO_VIGENCIA_BENEFICIO = codigo_vigencia_beneficio,",
				"          VIGENCIA_BENEFICIO = vigencia_beneficio,",
				"          FECHA_CREACION_BENEFICIO = fecha_creacion_beneficio,",
				"          CODIGO_APLICACION_BENEFICIO = codigo_aplicacion_beneficio,",
				"          APLICACION_BENEFICIO = aplicacion_beneficio,",
				"          CODIGO_TIPO_PROGRAMA_ASOCIADO_BENEFICIO = codigo_tipo_programa_asociado_beneficio,",
				"          TIPO_PROGRAMA_ASOCIADO_BENEFICIO = tipo_programa_asociado_beneficio,",
				"          FECHA_REFERENCIA_APLICAR_BENEFICIO = fecha_referencia_aplicar_beneficio,",
				"          CODIGO_COBERTURA_BENEFICIO = codigo_cobertura_beneficio,",
				"          COBERTURA_BENEFICIO = cobertura_beneficio,",
				"          CODIGO_NIVEL_APLICACION = codigo_nivel_aplicacion,",
				"          NIVEL_APLICACION = nivel_aplicacion,",
				"          CODIGO_TIPO_GRADO_BENEFICIO = codigo_tipo_grado_beneficio,",
				"          TIPO_GRADO_BENEFICIO = tipo_grado_beneficio,",
				"          CODIGO_HASH = CodigoHashPorFila@CODIGO_HASH,",
				"          FECHA_CREACION,",
				"          FECHA_ACTUALIZACION,",
				"          ORIGEN = origen,",
				"          ETL_ID",
				"     )) ~> DestinoDimBeneficio"
			]
		}
	}
}