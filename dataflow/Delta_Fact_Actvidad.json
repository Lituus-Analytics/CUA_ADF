{
	"name": "Delta_Fact_Actvidad",
	"properties": {
		"folder": {
			"name": "(PAM) Prospección, Admisión y Matrícula"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet_Fact_Actvidad_BI2",
						"type": "DatasetReference"
					},
					"name": "OrigenFactActividad"
				},
				{
					"dataset": {
						"referenceName": "Parquet_Fact_Actividad_MI",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MI_TEST_FACT_ACTVIDAD",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "exists1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          FECHA_INGRESO_EPISODIO_SK as integer,",
				"          EPISODIO_SK as integer,",
				"          PACIENTE_SK as integer,",
				"          UBI_GEOGRAFICA_SK as integer,",
				"          PRESTACION_SK as integer,",
				"          EMPRESA_PRES_CLINICA_SK as integer,",
				"          FACTURA_SK as integer,",
				"          FECHA_FACTURACION_SK as integer,",
				"          EMPRESA_PRES_FACTURADA_SK as integer,",
				"          PROF_MEDICO_TRATANTE_SK as integer,",
				"          DIAGNOSTICO_INGRESO_SK as integer,",
				"          DIAGNOSTICO_EGRESO_SK as integer,",
				"          UNIDAD_SOLI_PRESTACION_SK as integer,",
				"          UNIDAD_CARGA_PRESTACION_SK as integer,",
				"          UNIDAD_ADMISION_EPISODIO_SK as integer,",
				"          FECHA_CARGA_PRESTACION_SK as integer,",
				"          C_HRA_CARGA_PRESTACION as string,",
				"          C_PRESTACION_CARGADA_POR as string,",
				"          C_CANTIDAD_PRESTACIONES as decimal(5,0),",
				"          C_TIPO_DE_RECARGO as string,",
				"          C_PRECIO_PRESTACION as decimal(18,2),",
				"          C_PRECIO_BASICO_PRESTACION as decimal(18,0),",
				"          C_FACTOR_MULTIPLICADOR as decimal(6,3),",
				"          F_PRECIO_BASICO_PRES_FACT as decimal(18,2),",
				"          F_PRECIO_SUBTOTAL_PRES_FACT as decimal(18,2),",
				"          F_PRECIO_NETO_PRES as decimal(18,2),",
				"          F_FACTOR_MULTIPLICADOR as decimal(6,3),",
				"          F_CANT_PRES_FACT as decimal(18,0),",
				"          F_PORCENTAJE_COBERTURA_PRES as decimal(18,0),",
				"          F_RECARGO_HORARIO_PRES as string,",
				"          FACTURA_ACTIVA as string,",
				"          MEDICO_QUE_DIAGNOSTICA as string,",
				"          TIPO_DESCUENTO as string,",
				"          TIPO_MOVIMIENTO as string,",
				"          CLASE_MOVIMIENTO as string,",
				"          TIPO_CONTRATO_CONVENIDO as string,",
				"          CONTEO as decimal(1,0),",
				"          CORRELATIVO as decimal(18,0),",
				"          CLASE_ALTA as string,",
				"          FECHA_ALTA_MEDICA as timestamp,",
				"          HORA_ALTA_MEDICA as string,",
				"          ESTADO_ALTA as string,",
				"          FECHA_ACTUALIZACION as timestamp,",
				"          ORIGEN as string,",
				"          ETL_ID as string,",
				"          ANULADO_PRESTACION as string,",
				"          MARCA_CONTABILIZACION_PRESTACION as string,",
				"          NRO_ACTUAL_PRESTACION as string,",
				"          NRO_MOVIMIENTO as integer,",
				"          CODIGO_EPISODIO as string,",
				"          CODIGO_FACTURA as string,",
				"          ORDEN_CLINICA_SK as integer,",
				"          KEY_FACTACT_EPIDOC as string,",
				"          FECHA_ALTA_ADMINISTRATIVA as timestamp,",
				"          HORA_ALTA_ADMINISTRATIVA as string,",
				"          TIPO_MOV_EPISODIO as string,",
				"          UNIDAD_ENF_SOL as string,",
				"          UNIDAD_MED_SOL as string,",
				"          UNIDAD_GESTORA as string,",
				"          CECO_UN_ENF_SOL as string,",
				"          DESCRIPCION_CECO as string,",
				"          UNIDAD_MEDIDA as string,",
				"          FACTOR_CONVERSION_UN as decimal(10,4),",
				"          CAMA as string,",
				"          HABITACION_BOX as string,",
				"          FilaHash as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> OrigenFactActividad",
				"source(output(",
				"          FECHA_INGRESO_EPISODIO_SK as integer,",
				"          EPISODIO_SK as integer,",
				"          PACIENTE_SK as integer,",
				"          UBI_GEOGRAFICA_SK as integer,",
				"          PRESTACION_SK as integer,",
				"          EMPRESA_PRES_CLINICA_SK as integer,",
				"          FACTURA_SK as integer,",
				"          FECHA_FACTURACION_SK as integer,",
				"          EMPRESA_PRES_FACTURADA_SK as integer,",
				"          PROF_MEDICO_TRATANTE_SK as integer,",
				"          DIAGNOSTICO_INGRESO_SK as integer,",
				"          DIAGNOSTICO_EGRESO_SK as integer,",
				"          UNIDAD_SOLI_PRESTACION_SK as integer,",
				"          UNIDAD_CARGA_PRESTACION_SK as integer,",
				"          UNIDAD_ADMISION_EPISODIO_SK as integer,",
				"          FECHA_CARGA_PRESTACION_SK as integer,",
				"          C_HRA_CARGA_PRESTACION as string,",
				"          C_PRESTACION_CARGADA_POR as string,",
				"          C_CANTIDAD_PRESTACIONES as decimal(5,0),",
				"          C_TIPO_DE_RECARGO as string,",
				"          C_PRECIO_PRESTACION as decimal(18,2),",
				"          C_PRECIO_BASICO_PRESTACION as decimal(18,0),",
				"          C_FACTOR_MULTIPLICADOR as decimal(6,3),",
				"          F_PRECIO_BASICO_PRES_FACT as decimal(18,2),",
				"          F_PRECIO_SUBTOTAL_PRES_FACT as decimal(18,2),",
				"          F_PRECIO_NETO_PRES as decimal(18,2),",
				"          F_FACTOR_MULTIPLICADOR as decimal(6,3),",
				"          F_CANT_PRES_FACT as decimal(18,0),",
				"          F_PORCENTAJE_COBERTURA_PRES as decimal(18,0),",
				"          F_RECARGO_HORARIO_PRES as string,",
				"          FACTURA_ACTIVA as string,",
				"          MEDICO_QUE_DIAGNOSTICA as string,",
				"          TIPO_DESCUENTO as string,",
				"          TIPO_MOVIMIENTO as string,",
				"          CLASE_MOVIMIENTO as string,",
				"          TIPO_CONTRATO_CONVENIDO as string,",
				"          CONTEO as decimal(1,0),",
				"          CORRELATIVO as decimal(18,0),",
				"          CLASE_ALTA as string,",
				"          FECHA_ALTA_MEDICA as timestamp,",
				"          HORA_ALTA_MEDICA as string,",
				"          ESTADO_ALTA as string,",
				"          FECHA_ACTUALIZACION as timestamp,",
				"          ORIGEN as string,",
				"          ETL_ID as string,",
				"          ANULADO_PRESTACION as string,",
				"          MARCA_CONTABILIZACION_PRESTACION as string,",
				"          NRO_ACTUAL_PRESTACION as string,",
				"          NRO_MOVIMIENTO as integer,",
				"          CODIGO_EPISODIO as string,",
				"          CODIGO_FACTURA as string,",
				"          ORDEN_CLINICA_SK as integer,",
				"          KEY_FACTACT_EPIDOC as string,",
				"          FECHA_ALTA_ADMINISTRATIVA as timestamp,",
				"          HORA_ALTA_ADMINISTRATIVA as string,",
				"          TIPO_MOV_EPISODIO as string,",
				"          UNIDAD_ENF_SOL as string,",
				"          UNIDAD_MED_SOL as string,",
				"          UNIDAD_GESTORA as string,",
				"          CECO_UN_ENF_SOL as string,",
				"          DESCRIPCION_CECO as string,",
				"          UNIDAD_MEDIDA as string,",
				"          FACTOR_CONVERSION_UN as decimal(10,4),",
				"          CAMA as string,",
				"          HABITACION_BOX as string,",
				"          FilaHash as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source1",
				"OrigenFactActividad derive(FilaHash = FilaHash) ~> derivedColumn1",
				"derivedColumn1, source1 exists(derivedColumn1@FilaHash == source1@FilaHash,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1 alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['FECHA_INGRESO_EPISODIO_SK','EPISODIO_SK','PACIENTE_SK','UBI_GEOGRAFICA_SK','PRESTACION_SK','EMPRESA_PRES_CLINICA_SK','FACTURA_SK','FECHA_FACTURACION_SK','EMPRESA_PRES_FACTURADA_SK','PROF_MEDICO_TRATANTE_SK','DIAGNOSTICO_INGRESO_SK','DIAGNOSTICO_EGRESO_SK','UNIDAD_SOLI_PRESTACION_SK','UNIDAD_CARGA_PRESTACION_SK','UNIDAD_ADMISION_EPISODIO_SK','FECHA_CARGA_PRESTACION_SK','ORDEN_CLINICA_SK','NRO_ACTUAL_PRESTACION'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     preCommands: [],",
				"     postCommands: []) ~> sink1"
			]
		}
	}
}