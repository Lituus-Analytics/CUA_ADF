{
	"name": "TKC_DIM_PACIENTE",
	"properties": {
		"folder": {
			"name": "(PAM) Prospección, Admisión y Matrícula"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TMP_DIM_PACIENTE_TC",
						"type": "DatasetReference"
					},
					"name": "TMPDIMPACIENTE"
				},
				{
					"dataset": {
						"referenceName": "DIM_PACIENTE_TC",
						"type": "DatasetReference"
					},
					"name": "DimPaciente"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DIM_PACIENTE_TC",
						"type": "DatasetReference"
					},
					"name": "Destino"
				}
			],
			"transformations": [
				{
					"name": "CodigoHashPorFila"
				},
				{
					"name": "DoesnExists"
				},
				{
					"name": "LookupCodPaciente"
				},
				{
					"name": "SetDates"
				},
				{
					"name": "UpSert"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID_CORRELATIVO_TRAKCARE as long,",
				"          CODIGO_PACIENTE as string,",
				"          NOMBRES_PACIENTE as string,",
				"          APELLIDO_PATERNO_PACIENTE as string,",
				"          APELLIDO_MATERNO_PACIENTE as string,",
				"          FECHA_NACIMIENTO as string,",
				"          ID_SEXO as string,",
				"          SEXO as string,",
				"          GENERO as string,",
				"          GENERO_HL7 as string,",
				"          EDAD as string,",
				"          GRUPO_ETNICO as string,",
				"          RELIGION as string,",
				"          ES_DONANTE as string,",
				"          GRUPO_SANGUINEO as string,",
				"          ALERGIAS as string,",
				"          TIPO_DOCUMENTO as string,",
				"          NRO_DOCUMENTO as string,",
				"          CATEGORIA_PACIENTE as string,",
				"          TELEFONO_DOMICILIO as string,",
				"          TELEFONO_CELULAR as string,",
				"          TELEFONO_OFICINA as string,",
				"          CORREO_ELECTRONICO as string,",
				"          ESTADO_CIVIL as string,",
				"          PAIS_NACIMIENTO as string,",
				"          ID_NACIONALIDAD as string,",
				"          NACIONALIDAD as string,",
				"          FALLECIDO as string,",
				"          FECHA_FALLECIMIENTO as string,",
				"          ESTADO_ANULACION as string,",
				"          FECHA_ANULACION as string,",
				"          ANULADO_POR as string,",
				"          CALLE as string,",
				"          ID_COMUNA as string,",
				"          COMUNA as string,",
				"          ID_REGION as string,",
				"          REGION as string,",
				"          ID_PAIS as string,",
				"          PAIS as string,",
				"          FECHA_ACTUALIZACION_TRAKCARE as string,",
				"          HORA_ACTUALIZACION_TRAKCARE as string,",
				"          USUARIO_ACTUALIZACION_TRAKCARE as long,",
				"          FECHA_CREACION_TRAKCARE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> TMPDIMPACIENTE",
				"source(output(",
				"          CODIGO_PACIENTE as string,",
				"          CODIGO_HASH as string,",
				"          FECHA_CREACION_TRAKCARE as float",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT \\n      [CODIGO_PACIENTE],\\n      [CODIGO_HASH],\\n      [FECHA_CREACION_TRAKCARE]\\nFROM [dbo].[DIM_PACIENTE_TC]',",
				"     format: 'query') ~> DimPaciente",
				"TMPDIMPACIENTE derive(CODIGO_HASH = md5(\r",
				"ID_CORRELATIVO_TRAKCARE,\r",
				"CODIGO_PACIENTE,\r",
				"APELLIDO_PATERNO_PACIENTE,\r",
				"APELLIDO_MATERNO_PACIENTE,\r",
				"FECHA_NACIMIENTO,\r",
				"ID_SEXO,\r",
				"SEXO,\r",
				"GENERO,\r",
				"GENERO_HL7,\r",
				"EDAD,\r",
				"GRUPO_ETNICO,\r",
				"RELIGION,\r",
				"ES_DONANTE,\r",
				"GRUPO_SANGUINEO,\r",
				"ALERGIAS,\r",
				"TIPO_DOCUMENTO,\r",
				"NRO_DOCUMENTO,\r",
				"CATEGORIA_PACIENTE,\r",
				"TELEFONO_DOMICILIO,\r",
				"TELEFONO_CELULAR,\r",
				"TELEFONO_OFICINA,\r",
				"CORREO_ELECTRONICO,\r",
				"ESTADO_CIVIL,\r",
				"PAIS_NACIMIENTO,\r",
				"ID_NACIONALIDAD,\r",
				"NACIONALIDAD,\r",
				"FALLECIDO,\r",
				"FECHA_FALLECIMIENTO,\r",
				"ESTADO_ANULACION,\r",
				"FECHA_ANULACION,\r",
				"ANULADO_POR,\r",
				"CALLE,\r",
				"ID_REGION,\r",
				"REGION,\r",
				"ID_PAIS,\r",
				"PAIS,\r",
				"FECHA_ACTUALIZACION_TRAKCARE,\r",
				"HORA_ACTUALIZACION_TRAKCARE,\r",
				"USUARIO_ACTUALIZACION_TRAKCARE,\r",
				"FECHA_CREACION_TRAKCARE\r",
				")) ~> CodigoHashPorFila",
				"CodigoHashPorFila, DimPaciente exists(CodigoHashPorFila@CODIGO_HASH == DimPaciente@CODIGO_HASH,",
				"     negate:true,",
				"     broadcast: 'auto')~> DoesnExists",
				"DoesnExists, DimPaciente lookup(TMPDIMPACIENTE@CODIGO_PACIENTE == DimPaciente@CODIGO_PACIENTE,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupCodPaciente",
				"LookupCodPaciente derive(CODIGO_PACIENTE = left(TMPDIMPACIENTE@CODIGO_PACIENTE, 20)) ~> SetDates",
				"SetDates alterRow(upsertIf(true())) ~> UpSert",
				"UpSert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as long,",
				"          CODIGO_PACIENTE as string,",
				"          NOMBRES_PACIENTE as string,",
				"          APELLIDO_PATERNO_PACIENTE as string,",
				"          APELLIDO_MATERNO_PACIENTE as string,",
				"          FECHA_NACIMIENTO as string,",
				"          ID_SEXO as string,",
				"          SEXO as string,",
				"          GENERO as string,",
				"          GENERO_HL7 as string,",
				"          EDAD as string,",
				"          GRUPO_ETNICO as string,",
				"          RELIGION as string,",
				"          ES_DONANTE as string,",
				"          GRUPO_SANGUINEO as string,",
				"          ALERGIAS as string,",
				"          TIPO_DOCUMENTO as string,",
				"          NRO_DOCUMENTO as string,",
				"          CATEGORIA_PACIENTE as string,",
				"          TELEFONO_DOMICILIO as string,",
				"          TELEFONO_CELULAR as string,",
				"          TELEFONO_OFICINA as string,",
				"          CORREO_ELECTRONICO as string,",
				"          ESTADO_CIVIL as string,",
				"          PAIS_NACIMIENTO as string,",
				"          ID_NACIONALIDAD as string,",
				"          NACIONALIDAD as string,",
				"          FALLECIDO as string,",
				"          FECHA_FALLECIMIENTO as string,",
				"          ESTADO_ANULACION as string,",
				"          FECHA_ANULACION as string,",
				"          ANULADO_POR as string,",
				"          CALLE as string,",
				"          ID_REGION as string,",
				"          REGION as string,",
				"          ID_PAIS as string,",
				"          PAIS as string,",
				"          FECHA_ACTUALIZACION as timestamp,",
				"          HORA_ACTUALIZACION as timestamp,",
				"          USUARIO_ACTUALIZACION as long,",
				"          FECHA_CREACION as timestamp,",
				"          HashTotal as binary",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CODIGO_PACIENTE'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     partitionBy('hash', 1)) ~> Destino"
			]
		}
	}
}